# test the ovs performance on Ubuntu 14.04.4 (Kernel 4.2.0-27)
# NIC: Intel Corporation Ethernet Controller 10-Gigabit X540-AT2 (rev 01)
# Node72 and Node73 with 10G NIC (p3p1)
- case 1: raw device performance
  p3p1(Node72)  <--> p3p1(Node 73)
  throughput: 
  
- case 2: Host vlan performance
  vlan11 <--> p3p1(Node72) <--> p3p1(Node73) <--> vlan 11
  throughput: 9.34 Gbits/sec

- case 3: vm vlan performance
  vm1 <--> br-tun <--> vlan11 <--> p3p1(Node72) <--> p3p1(Node73) <--> vlan 11 <--> br-tun <--> vm2
  Node72:
    ovs-vsctl add-port br-tun vlan11 type=internal
    ovs-ofctl show br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=7,actions=output:10
    ovs-ofctl add-flow br-tun priority=5,in_port=10,actions=output:7
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
    
  Node73:
    ovs-vsctl add-port br-tun vlan11
    ovs-ofctl show br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=5,actions=output:8
    ovs-ofctl add-flow br-tun priority=5,in_port=8,actions=output:5
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
  throughput: 
   
- case 4: vxlan performance without csum flag(tunnel created on vlan11)
  Node72: 
    ovs-vsctl add-br br-tun
    ovs-vsctl add-port br-tun vxlan1 -- set Interface vxlan1 type=vxlan options:remote_ip=172.27.33.73 options:out_key=flow options:in_key=flow
    ovs-ofctl show br-tun
    ovs-ofctl del-flows br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=7,actions=set_tunnel:5566,output:8
    ovs-ofctl add-flow br-tun priority=5,in_port=8,tun_id=5566,actions=output:7
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
  Note:  "options:out_key=flow options:in_key=flow" should be added to make the vni effect
  
  Node73: 
    ovs-vsctl add-br br-tun
    ovs-vsctl add-port br-tun vxlan1 -- set Interface vxlan1 type=vxlan options:remote_ip=172.27.33.72 options:out_key=flow options:in_key=flow
    ovs-ofctl show br-tun
    ovs-ofctl del-flows br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=5,actions=set_tunnel:5566,output:6
    ovs-ofctl add-flow br-tun priority=5,in_port=6,tun_id=5566,actions=output:5
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
    
  throughput: 4.02 Gbits/sec
  
- case 5:  vxlan performance with csum flag (tunnel created on vlan11)
  Node72: 
    ovs-vsctl add-br br-tun
    ovs-vsctl add-port br-tun vxlan1 -- set Interface vxlan1 type=vxlan options:remote_ip=172.27.33.73 options:csum=true options:out_key=flow options:in_key=flow
    ovs-ofctl show br-tun
    ovs-ofctl del-flows br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=5,actions=set_tunnel:5566,output:1
    ovs-ofctl add-flow br-tun priority=5,in_port=1,tun_id=5566,actions=output:5
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
  
  Node73: 
    ovs-vsctl add-br br-tun
    ovs-vsctl add-port br-tun vxlan1 -- set Interface vxlan1 type=vxlan options:remote_ip=172.27.33.72 options:csum=true options:out_key=flow options:in_key=flow
    ovs-ofctl show br-tun
    ovs-ofctl del-flows br-tun
    ovs-ofctl add-flow br-tun priority=5,in_port=3,actions=set_tunnel:5566,output:4
    ovs-ofctl add-flow br-tun priority=5,in_port=4,tun_id=5566,actions=output:3
    ovs-ofctl add-flow br-tun priority=0,action=NORMAL
  throughput:  5.06 Gbits/sec
  
- case 6: vxlan performance with csum flag and gro off (tunnel created on vlan11)
  throughput:  5.39 Gbits/sec

  
  
  
############################# env setup ###################################  
# install openvswitch 2.4
apt-get install openvswitch-switch  

# install qemu-kvm
apt-get install qemu-kvm libvirt-bin virt-manager

# download ubuntu1404.3.img from 172.27.33.4: /data/glove/
scp 172.27.33.4:/data/glove/ubuntu1404.3.img /data
# insert file to image
apt-get install libguestfs-tools
update-guestfs-appliance
guestmount -a /data/ubuntu1404.3.img -i --rw /mnt
cp /usr/bin/iperf3 /mnt/usr/bin
cp /usr/lib/x86_64-linux-gnu/libiperf.so.0.0.0 /mnt/usr/lib/x86_64-linux-gnu
Note: refer to http://docs.openstack.org/zh_CN/image-guide/content/ch_modifying_images.html

# start a vm
  cd /etc/libvirt/qemu/
  vi test2.xml 
  virsh define test2.xml 
  virsh start test2






