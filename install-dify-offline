#tencent cloud cvm
name:ubuntu
pwd: 2025@jd
# 准备docker运行环境
# Ubuntu 22.04
wget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce_27.5.1-1~ubuntu.22.04~jammy_amd64.deb
wget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce-cli_27.5.1-1~ubuntu.22.04~jammy_amd64.deb
wget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/containerd.io_1.7.25-1_amd64.deb
wget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb
#在目标服务器上，进入存放 .deb 文件的目录，依次安装 Docker CE、Docker CE CLI 和 containerd.io
sudo dpkg -i containerd.io_1.7.25-1_amd64.deb
sudo dpkg -i docker-ce-cli_27.5.1-1~ubuntu.22.04~jammy_amd64.deb
sudo dpkg -i docker-ce_27.5.1-1~ubuntu.22.04~jammy_amd64.deb
#配置 Docker 服务
sudo systemctl start docker
sudo systemctl enable docker
sudo docker -v
sudo dpkg -i docker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb

###############################################################
#ubuntu 20.04 install docker and docker compose
wget https://download.docker.com/linux/ubuntu/dists/focal/pool/stable/amd64/containerd.io_1.6.12-1_amd64.deb
wget https://download.docker.com/linux/ubuntu/dists/focal/pool/stable/amd64/docker-ce-cli_20.10.21~3-0~ubuntu-focal_amd64.deb
wget https://download.docker.com/linux/ubuntu/dists/focal/pool/stable/amd64/docker-ce_20.10.21~3-0~ubuntu-focal_amd64.deb
sudo dpkg -i containerd.io_1.6.12-1_amd64.deb docker-ce-cli_20.10.21~3-0~ubuntu-focal_amd64.deb docker-ce_20.10.21~3-0~ubuntu-focal_amd64.deb
sudo service docker start
sudo docker -v
sudo curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo mv docker-compose-v2.29.3-linux-x86_64 /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

#配置docker镜像加速，执行以下命令
sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json <<-'EOF'
{
"registry-mirrors":[
    "https://9cpn8tt6.mirror.aliyuncs.com",
    "https://registry.docker-cn.com",
    "https://mirror.ccs.tencentyun.com",
    "https://docker.1panel.live",
    "https://2a6bf1988cb6428c877f723ec7530dbc.mirror.swr.myhuaweicloud.com",
    "https://docker.m.daocloud.io",
    "https://hub-mirror.c.163.com",
    "https://mirror.baidubce.com",
    "https://your_preferred_mirror",
    "https://dockerhub.icu",
    "https://docker.registry.cyou",
    "https://docker-cf.registry.cyou",
    "https://dockercf.jsdelivr.fyi",
    "https://docker.jsdelivr.fyi",
    "https://dockertest.jsdelivr.fyi",
    "https://mirror.aliyuncs.com",
    "https://dockerproxy.com",
    "https://mirror.baidubce.com",
    "https://docker.m.daocloud.io",
    "https://docker.nju.edu.cn",
    "https://docker.mirrors.sjtug.sjtu.edu.cn",
    "https://docker.mirrors.ustc.edu.cn",
    "https://mirror.iscas.ac.cn",
    "https://docker.rainbond.cc"
    ]
}
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
--------------------------------------------------------------
#准备dify软件包
git clone https://github.com/langgenius/dify.git
或者
wget https://github.com/langgenius/dify/archive/refs/heads/main.zip
cd dify/docker
cp .env.example .env
docker-compose up -d
#保存docker镜像到本地(共8个）
docker save langgenius/dify-web:0.15.3 langgenius/dify-api:0.15.3 nginx:latest postgres:15-alpine redis:6-alpine langgenius/dify-sandbox:0.2.10 ubuntu/squid:latest semitechnologies/weaviate:1.19.0 | gzip > dify-images.tar.gz
#传输文件到离线服务器
将下载好的 Dify 源码和 dify-images.tar.gz 文件传输到离线服务器上
#离线安装
#加载 Docker 镜像
gunzip -c dify-images.tar.gz | docker load
#配置环境变量
bash
cp .env.example .env
编辑 .env 文件
#启动 Dify
docker-compose up -d

#docker命令
docker rm -f $(docker ps -a -q)
docker rmi $(docker images -q)

docker rmi langgenius/dify-web:1.0.0

docker build -t langgenius/dify-web:1.0.0 .


#查看当前代码的版本
git status
git checkout <branch-name>：切换到指定的分支
git checkout -b <new-branch-name>：创建并切换到一个新的分支。
git checkout main : 切换回主分支

docker build -t langgenius/dify-web:1.0.0 .







