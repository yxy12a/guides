## This doc is to describe how to set up the env for ceilometer + gnocchi + influxdb + grafana.
## To make it work, you should make sure belows are OK.
## - sw installated: influxdb, postgresql, gnocchi, grafana, ceilometer etc.
## - configuration files: 

## influxdb
# web UI: http://localhost:8083
# usr: root
# pwd: root
# Note: - edit the /opt/influxdb/current/config.toml to modify the listen port
#       - port 25826 can be used for data from collectd
wget https://s3.amazonaws.com/influxdb/influxdb_0.9.6.1_amd64.deb
sudo dpkg -i influxdb_0.9.6.1_amd64.deb
sudo /etc/init.d/influxdb start

## postgresql
apt-get install postgresql
sudo /etc/init.d/postgresql start
sudo -u postgres psql 
> CREATE DATABASE gnocchi;
> CREATE USER gnocchi;
> ALTER USER gnocchi PASSWORD 'gnocchi';
> GRANT ALL PRIVILEGES ON DATABASE gnocchi to gnocchi;

## gnocchi
apt-get install software-properties-common
add-apt-repository cloud-archive:liberty
apt-get update && apt-get dist-upgrade
apt-get install python-setuptools
apt-get install python-pip
apt-get install python-dev
apt-get install libpq-dev
pip install gnocchi
pip install keystone
pip install influxdb
pip install gnocchiclient

gnocchi-dbsync
sudo /usr/bin/python /usr/local/bin/gnocchi-metricd -d -v --config-file /etc/gnocchi/gnocchi.conf
sudo /usr/bin/python /usr/local/bin/gnocchi-api -d -v --config-file /etc/gnocchi/gnocchi.conf
gnocchi archive-policy create -d granularity:5m,points:12 -d granularity:1h,points:24 -d granularity:1d,points:30 low
gnocchi archive-policy-rule create -a low -m "*" default
ps -aef|grep gnocchi|grep -v grep|awk '{print $2}'|xargs kill -9

## grafana
# web UI: http://192.168.56.101:3000/login
# add below in /etc/apt/sources.list 
deb https://packagecloud.io/grafana/stable/debian/ wheezy main

curl https://packagecloud.io/gpg.key | sudo apt-key add -
sudo apt-get update
sudo apt-get install grafana
# git clone http://github.com/sileht/grafana-plugins-gnocchi.git /opt/grafana-plugins
git clone https://github.com/grafana/grafana-plugins.git /opt
mkdir -p /usr/share/grafana/public/app/plugins/datasource/gnocchi
mount -o bind /opt/grafana-plugins/datasources/gnocchi /usr/share/grafana/public/app/plugins/datasource/gnocchi
service grafana-server restart

## ceilometer
# refer to openstack official installation guide

## create gnocchi user on openstack controller node
openstack user create --domain default --password-prompt gnocchi
openstack role add --project service --user gnocchi admin
openstack service create --name gnocchi --description "OpenStack Metric Service" metric
openstack endpoint create --region RegionOne metric public http://controller:8041
openstack endpoint create --region RegionOne metric admin http://controller:8041
openstack endpoint create --region RegionOne metric internal http://controller:8041
# Note: It seems that there is an issue of grafana that can't parse controller, so here using controller's IP instead.

## configuration for /etc/gnocchi/policy.json

refer to gnocchi source code: /etc/gnocchi/policy.json

## configuration for /etc/gnocchi/gnocchi.conf
[DEFAULT]
#debug = True
#verbose = True
log_file = /var/log/gnocchi/gnocchi.log

[storage]
influxdb_database = gnocchi
driver = influxdb
coordination_url = file:///opt/gnocchi/locks

[keystone_authtoken]
auth_uri = http://192.168.99.100:5000
auth_url = http://192.168.99.100:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
password = gnocchi
username = gnocchi

[api]
# Ordering here in important
middlewares = oslo_middleware.cors.CORS
middlewares = keystonemiddleware.auth_token.AuthProtocol

[cors]
allowed_origin = http://192.168.99.100:3000
allow_methods = GET,POST,PUT,DELETE,OPTIONS,HEAD
allow_headers = Content-Type,Cache-Control,Content-Language,Expires,Last-Modified,Pragma,X-Auth-Token,X-Subject-Token
expose_headers = Content-Type,Cache-Control,Content-Language,Expires,Last-Modified,Pragma

[indexer]
url = postgresql://gnocchi:gnocchi@127.0.0.1/gnocchi?client_encoding=utf8

## configuraiont for /etc/gnocchi/api-paste.ini 
# Remove keystone_authtoken from the pipeline if you don't want to use keystone authentication
[pipeline:main]
pipeline = cors keystone_authtoken gnocchi
#pipeline = gnocchi

[app:gnocchi]
paste.app_factory = gnocchi.rest.app:app_factory

[filter:keystone_authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
oslo_config_project = gnocchi

[filter:cors]
paste.filter_factory = oslo_middleware.cors:filter_factory
oslo_config_project = gnocchi

## configuration for /etc/ceilometer/ceilometer.conf
[dispatcher_gnocchi]
#filter_project = gnocchi
#filter_service_activity = True
filter_service_activity = False
archive_policy = low
url = http://controller:8041

## configuration for /etc/ceilometer/gnocchi_resources.yaml
refer to ceilometer source code to add /etc/ceilometer/gnocchi_resources.yaml

## Configuring CORS for Gnocchi and Keystone
https://blog.sileht.net/configuring-cors-for-gnocchi-and-keystone.html

## install gnocchi with apache2: This is not a must 
atp-get install apache2 libapache2-mod-wsgi 
mkdir /var/www/gnocchi
cp /usr/local/lib/python2.7/dist-packages/gnocchi/rest/app.wsgi /var/www/gnocchi/

## configuration for /etc/apache2/sites-available/gnocchi.conf
Listen 8041

<VirtualHost *:8041>
    WSGIDaemonProcess gnocchi lang='en_US.UTF-8' locale='en_US.UTF-8' user=gnocchi display-name=%{GROUP} processes=9 threads=10
    WSGIProcessGroup gnocchi
    WSGIScriptAlias / /var/www/gnocchi/app.wsgi
    WSGIApplicationGroup %{GLOBAL}
    <IfVersion >= 2.4>
        ErrorLogFormat "%{cu}t %M"
    </IfVersion>
    ErrorLog /var/log/apache2/gnocchi.log
    CustomLog /var/log/apache2/gnocchi-access.log combined
</VirtualHost>

## enable gnocchi site 
a2ensite gnocchi

## grafana query example
Query:  
- {"=":{"display_name": "test1"} }
- {"or":[ {"=":{"host": "52dbd17439422cf3a30b5916fbb1388a56bbad45f14b58fde72ced26"} }, {"=":{"host": "fc3c4b0ff2873dc44ecc29dd1487f0683200bb2639c3ea3c7d4f73c7"} }]}  

## gnocchi client query example
gnocchi resource search -t instance --query "project_id=d672b5f68ca34fde96fef5dc37af3bcc"

## issues list
- server return 500 error(server overhead) when exec "gnocchi resource search --type instance --query "display_name=test1"
  using apache2 wsgi + gnocchi_api to avoid this issue
  
- query error "AttributeError: 'unicode' object has no attribute 'utcoffset'" when add {"=":{"display_name": "test1"} } in grafana

- query return null when exec "gnocchi resource search --type instance --query "display_name=compile-ceph"
  this issue is caused by '-' in the query. There is a bug in the gnocchi client from the log.
  

#############################################################################################################
source /opt/devstack/openrc admin admin
token=$(openstack token issue -f value -c id)
export LC_CTYPE=en_US.UTF-8
mitmproxy -p 8042 -P http://localhost:8041/ --setheader ":~hq:X-Auth-Token: $token"

http://192.168.56.101:8042//v1/resource/instance/6c3238dd-cc2b-49a3-99dc-a807c3d11c63/metric/cpu_util/measures

----------------------- devstack for ceilometer and gnocchi --
disable_service s-proxy s-object s-container s-account
disable_service c-api c-sch c-vol
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git
enable_service ceilometer-acompute ceilometer-acentral ceilometer-anotification ceilometer-collector ceilometer-api ceilometer-aipmi
enable_plugin gnocchi https://github.com/openstack/gnocchi master
enable_service gnocchi-api,gnocchi-metricd
enable_service gnocchi-grafana,postgresql
enable_service postgresql
GNOCCHI_STORAGE_BACKEND=influxdb

Reference:
ceilometer config for gnocchi: https://blog.sileht.net/autoscaling-with-heat-ceilometer-and-gnocchi.html
