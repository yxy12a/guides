1. install gnocchi
- - - - - - - - - - - - - - -
cd /opt
git clone https://github.com/openstack/gnocchi.git
git checkout -b origin/stable/1.3
apt-get install python-numpy
apt-get install python-dev
pip install -e .
- - - - - - - - - - - - - - -
# apt-get install software-properties-common
# add-apt-repository cloud-archive:liberty
# apt-get update && apt-get dist-upgrade
# apt-get install python-setuptools
# apt-get install python-pip
# apt-get install python-dev
# apt-get install libpq-dev
# pip install gnocchi
# pip install keystone
# pip install influxdb
# pip install gnocchiclient

- - - - - - - - - - - - - - -

2. install influxdb
wget https://s3.amazonaws.com/influxdb/influxdb_0.6.5_amd64.deb
wget https://s3.amazonaws.com/influxdb/influxdb_0.9.6.1_amd64.deb
sudo dpkg -i influxdb_0.9.6.1_amd64.deb
sudo /etc/init.d/influxdb start
web管理界面: http://localhost:8083
usr: root
pwd: root
Note: - 如果需要修改端口， 修改配置文件/opt/influxdb/current/config.toml即可。
      - influxdb打开端口25826可以用来搜集从collectd发来的数据。

3. install postgresql
apt-get install postgresql   

4. install grafana
wget https://grafanarel.s3.amazonaws.com/builds/grafana_2.6.0_amd64.deb
dpkg -i grafana_2.6.0_amd64.deb
git clone http://github.com/sileht/grafana-plugins-gnocchi.git /opt/grafana-plugins
mkdir -p /usr/share/grafana/public/app/plugins/datasource/gnocchi
mount -o bind /opt/grafana-plugins/datasources/gnocchi /usr/share/grafana/public/app/plugins/datasource/gnocchi
service grafana-server restart


5. config gnocchi
   
6. config ceilometer

7. start the service
gnocchi-dbsync
sudo /usr/bin/python /usr/local/bin/gnocchi-metricd -d -v --config-file /etc/gnocchi/gnocchi.conf
sudo /usr/bin/python /usr/local/bin/gnocchi-api -d -v --config-file /etc/gnocchi/gnocchi.conf
gnocchi archive-policy create -d granularity:5m,points:12 -d granularity:1h,points:24 -d granularity:1d,points:30 low
gnocchi archive-policy-rule create -a low -m "*" default

ps -aef|grep gnocchi|grep -v grep|awk '{print $2}'|xargs kill -9

------------------------ create gnocchi account and database on postgres  --------------
sudo -u postgres psql 
> CREATE DATABASE gnocchi LC_COLLATE C LC_CTYPE;
> CREATE USER gnocchi;
> ALTER USER gnocchi PASSWORD 'gnocchi';
> GRANT ALL PRIVILEGES ON DATABASE gnocchi to gnocchi;

----------------------- create gnocchi user --------------------------------------------
openstack user create --domain default --password-prompt gnocchi
openstack role add --project service --user gnocchi admin
openstack service create --name gnocchi --description "OpenStack Metric Service" metric
openstack endpoint create --region RegionOne metric public http://controller:8041
openstack endpoint create --region RegionOne metric admin http://controller:8041
openstack endpoint create --region RegionOne metric internal http://controller:8041

------------------------ configuration for /etc/gnocchi/policy.json -------------------

refer to gnocchi source code: /etc/gnocchi/policy.json

------------------------ configuration for /etc/gnocchi/gnocchi.conf -------------------
[DEFAULT]
#debug = True
#verbose = True
log_file = /var/log/gnocchi/gnocchi.log

[storage]
influxdb_database = gnocchi
driver = influxdb
coordination_url = file:///opt/gnocchi/locks

[keystone_authtoken]
auth_uri = http://192.168.99.100:5000
auth_url = http://192.168.99.100:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
password = gnocchi
username = gnocchi

[api]
# Ordering here in important
middlewares = oslo_middleware.cors.CORS
middlewares = keystonemiddleware.auth_token.AuthProtocol

[cors]
allowed_origin = http://192.168.99.100:3000
allow_methods = GET,POST,PUT,DELETE,OPTIONS,HEAD
allow_headers = Content-Type,Cache-Control,Content-Language,Expires,Last-Modified,Pragma,X-Auth-Token,X-Subject-Token
expose_headers = Content-Type,Cache-Control,Content-Language,Expires,Last-Modified,Pragma

[indexer]
url = postgresql://gnocchi:gnocchi@127.0.0.1/gnocchi?client_encoding=utf8


------------ configuraiont for /etc/gnocchi/api-paste.ini --------
# Remove keystone_authtoken from the pipeline if you don't want to use keystone authentication
[pipeline:main]
pipeline = cors keystone_authtoken gnocchi
#pipeline = gnocchi

[app:gnocchi]
paste.app_factory = gnocchi.rest.app:app_factory

[filter:keystone_authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
oslo_config_project = gnocchi

[filter:cors]
paste.filter_factory = oslo_middleware.cors:filter_factory
oslo_config_project = gnocchi



------------ configuration for /etc/ceilometer/ceilometer.conf ------------
[dispatcher_gnocchi]
#filter_project = gnocchi
#filter_service_activity = True
filter_service_activity = False
archive_policy = low
url = http://controller:8041

refer to ceilometer source code to add /etc/ceilometer/gnocchi_resources.yaml

source /opt/devstack/openrc admin admin
token=$(openstack token issue -f value -c id)
export LC_CTYPE=en_US.UTF-8
mitmproxy -p 8042 -P http://localhost:8041/ --setheader ":~hq:X-Auth-Token: $token"

http://192.168.56.101:8042//v1/resource/instance/6c3238dd-cc2b-49a3-99dc-a807c3d11c63/metric/cpu_util/measures

----------------------- Configuring CORS for Gnocchi and Keystone -----------------------
https://blog.sileht.net/configuring-cors-for-gnocchi-and-keystone.html

----------------------- grafana login ------------------------
http://192.168.56.101:3000/login
usrname:
pwd: 



----------------------- devstack for ceilometer and gnocchi --
disable_service s-proxy s-object s-container s-account
disable_service c-api c-sch c-vol
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git
enable_service ceilometer-acompute ceilometer-acentral ceilometer-anotification ceilometer-collector ceilometer-api ceilometer-aipmi
enable_plugin gnocchi https://github.com/openstack/gnocchi master
enable_service gnocchi-api,gnocchi-metricd
enable_service gnocchi-grafana,postgresql
enable_service postgresql
GNOCCHI_STORAGE_BACKEND=influxdb


Reference:
ceilometer config for gnocchi: https://blog.sileht.net/autoscaling-with-heat-ceilometer-and-gnocchi.html




{“=“:{“id”:”8babf299-33b6-43b4-b34f-c395ad694acd"}}
